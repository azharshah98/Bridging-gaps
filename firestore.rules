rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function getUserData() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data;
    }
    
    function hasRole(role) {
      return isAuthenticated() && getUserData().role == role;
    }
    
    function isAdmin() {
      return hasRole('admin');
    }
    
    function isManager() {
      return hasRole('manager');
    }
    
    function isStaff() {
      return hasRole('staff');
    }
    
    function canRead() {
      return isAdmin() || isManager() || isStaff();
    }
    

    
    // Users collection - only admins can manage users
    match /users/{userId} {
      allow read: if isAuthenticated() && (request.auth.uid == userId || canRead());
      allow write: if isAdmin() || (isAuthenticated() && request.auth.uid == userId);
      allow delete: if isAdmin();
    }
    
        // Carers collection - all authenticated users can CRUD
    match /carers/{carerId} {
      allow read, write: if isAuthenticated();
    }

    // Referrals collection - all authenticated users can CRUD
    match /referrals/{referralId} {
      allow read, write: if isAuthenticated();
    }
    

    
    // Audit logs - read only for staff, write only for system
    match /audit_logs/{logId} {
      allow read: if canRead();
      allow write: if false; // Only system can write audit logs
    }
    

  }
}
